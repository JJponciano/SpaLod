"""
Django settings for spalod project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%=g@ry=4q8mauza^azmpwd(rw*w5y)6ywm0t=86h@@l-r$=!#b'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost']

CSRF_TRUSTED_ORIGINS = ['http://localhost:8080', 'http://localhost:8000', 'http://localhost']
CORS_ORIGIN_WHITELIST = [
    'http://localhost:8080',
    'http://localhost:8000'
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'dj_rest_auth',
    'social_django',
    'allauth',  
    'allauth.account', 
    'allauth.socialaccount',  # Add this
    'allauth.socialaccount.providers.gitlab', 
    'allauth.socialaccount.providers.facebook',
    'spalod_app',
    'django.contrib.sites',
    'dj_rest_auth.registration',
]
# Django Rest Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}
# Social Auth settings (for GitLab)
AUTHENTICATION_BACKENDS = (
    'social_core.backends.gitlab.GitLabOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)
SOCIAL_AUTH_GITLAB_KEY = '404b08ce3f55a47545e7fcc60402af9e0e81879c9374a1ad0110a301b5c5fa0f'
SOCIAL_AUTH_GITLAB_SECRET = 'gloas-b258242c5d6c0dd39d265a4e5bf4b3f05d56f5020825259cf1cb4b7238c16686'
SOCIAL_AUTH_GITLAB_API_URL = 'https://gitlab.com'  

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'allauth.account.middleware.AccountMiddleware', 
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'spalod.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'spalod.wsgi.application'

SOCIALACCOUNT_PROVIDERS = {
    "gitlab": {
        "SCOPE": ["read_user"],
        "APPS": [
            {
                "client_id": "404b08ce3f55a47545e7fcc60402af9e0e81879c9374a1ad0110a301b5c5fa0f",
                "secret": "gloas-b258242c5d6c0dd39d265a4e5bf4b3f05d56f5020825259cf1cb4b7238c16686",
                "settings": {
                    "gitlab_url": "https://gitlab.com",
                }
            }
        ]
    },
}

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
SITE_ID = 1

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


# Upload handler
FILE_UPLOAD_HANDLERS = [
    "spalod_app.flyvast_upload_handler.FlyvastUploadHandler",
    "django.core.files.uploadhandler.MemoryFileUploadHandler",
    "django.core.files.uploadhandler.TemporaryFileUploadHandler",
]

# Flyvast conf
FLYVAST_API_URL = 'https://app.flyvast.com/flyvast/app/server/bll'
FLYVAST_USER = 'poux@geovast3d.com'
FLYVAST_PASSWORD = 'geovast3d'